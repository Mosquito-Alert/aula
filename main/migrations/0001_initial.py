# Generated by Django 3.1 on 2023-02-17 08:49

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=10, verbose_name='Label')),
                ('text', models.CharField(max_length=255, verbose_name='Answer')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Correct answer')),
            ],
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('active', models.BooleanField(default=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('html_header_groups', models.TextField(blank=True, null=True)),
                ('html_header_teachers', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EducationCenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('hashtag', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(blank=True, default=main.models.get_current_active_campaign, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='education_centers', to='main.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=500, verbose_name='Question')),
                ('question_order', models.IntegerField(default=1, verbose_name='Question order inside the quiz')),
                ('doc_link', models.URLField(blank=True, max_length=1000, null=True)),
                ('question_picture', models.ImageField(null=True, upload_to='media/question_pics/')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('html_header', models.TextField(blank=True, null=True)),
                ('published', models.BooleanField(default=False)),
                ('type', models.IntegerField(choices=[(0, 'Test'), (1, 'Material'), (2, 'Enquesta'), (3, 'Pujar fitxer'), (4, 'Enquesta professorat'), (5, 'Resposta oberta')])),
                ('seq', models.IntegerField(blank=True, null=True, verbose_name='Sequence in which the quizzes are meant to be taken')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(blank=True, default=main.models.get_current_active_campaign, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizzes', to='main.campaign')),
                ('requisite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allows', to='main.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='QuizRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('run_number', models.IntegerField(default=1)),
                ('questions_number', models.IntegerField(default=0, help_text='Number of questions when the quiz was finished')),
                ('questions_right', models.IntegerField(default=0, help_text='Number of correctly answered questions in the run')),
                ('finishing_comments', models.TextField(blank=True, null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_quizzes', to='main.quiz')),
                ('taken_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='taken_quizzes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(db_index=True, max_length=50, verbose_name='A word')),
                ('type', models.CharField(choices=[('animal', 'animal'), ('color', 'color'), ('adjective', 'adjective')], db_index=True, max_length=9)),
                ('language', models.CharField(db_index=True, default='en', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='QuizRunAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answered', models.BooleanField(default=False)),
                ('uploaded_material', models.FileField(blank=True, null=True, upload_to='media/uploaded/')),
                ('open_answer', models.TextField(blank=True, null=True)),
                ('chosen_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='run_answer', to='main.answer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='run_question', to='main.question')),
                ('quizrun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='main.quizrun')),
            ],
        ),
        migrations.CreateModel(
            name='QuizCorrection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('date_finished', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('correction_value', models.FloatField(blank=True, null=True)),
                ('corrected_quizrun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corrections', to='main.quizrun')),
                ('corrector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corrected_quizzes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='main.quiz'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_group', models.BooleanField(default=False)),
                ('is_alum', models.BooleanField(default=False)),
                ('group_password', models.CharField(max_length=4, null=True, verbose_name='Password grup')),
                ('group_public_name', models.CharField(max_length=255, null=True)),
                ('group_picture', models.ImageField(null=True, upload_to='media/group_pics/')),
                ('group_class', models.CharField(max_length=500, null=True)),
                ('group_class_slug', models.CharField(max_length=500, null=True)),
                ('groups_string', models.CharField(blank=True, max_length=1000, null=True)),
                ('center_string', models.CharField(blank=True, max_length=1000, null=True)),
                ('n_students_in_group', models.IntegerField(default=3)),
                ('group_hashtag', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('teacher_password', models.CharField(max_length=128, null=True)),
                ('alum_in_group', models.ManyToManyField(related_name='alum_groups', to=settings.AUTH_USER_MODEL)),
                ('alum_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher', to=settings.AUTH_USER_MODEL)),
                ('campaign', models.ForeignKey(blank=True, default=main.models.get_current_active_campaign, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profiles', to='main.campaign')),
                ('group_teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='group_teacher', to=settings.AUTH_USER_MODEL)),
                ('teacher_belongs_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.educationcenter')),
            ],
        ),
        migrations.CreateModel(
            name='CheckedQuizrun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checked_quizruns', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checkedbyadmin_quizruns', to=settings.AUTH_USER_MODEL)),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checks', to='main.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='BreedingSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_uuid', models.CharField(blank=True, max_length=36, unique=True)),
                ('observation_date', models.DateTimeField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('private_webmap_layer', models.CharField(blank=True, max_length=255)),
                ('photo_url', models.CharField(blank=True, max_length=255)),
                ('note', models.TextField()),
                ('center_hashtag', models.CharField(blank=True, max_length=100)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='breeding_sites', to='main.campaign')),
            ],
        ),
        migrations.CreateModel(
            name='Awards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_bracket', models.CharField(blank=True, max_length=36)),
                ('format', models.CharField(blank=True, max_length=100)),
                ('award', models.CharField(blank=True, max_length=100)),
                ('center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='center_awards', to='main.educationcenter')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_awards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='main.question'),
        ),
    ]
